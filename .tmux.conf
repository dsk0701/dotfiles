# Escキーの反応を良くする
set -sg escape-time 0

# 設定ファイルをリロードする
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# 256色端末を使用する
set -g default-terminal "screen-256color"

# ペインボーダーの色を設定する
set -g pane-border-style fg=green,bg=black
# アクティブなペインを目立たせる
set -g pane-active-border-style fg=white
set -g pane-active-border-style bg=yellow

## ヴィジュアルノーティフィケーションを有効にする
setw -g monitor-activity on
set -g visual-activity on


# ----------
# screen like setting
# ----------
# Set the prefix to ^K.
unbind C-b
set -g prefix ^K
bind k send-prefix

# screen ^C c 
unbind ^C
bind ^C new-window
unbind c
bind c new-window

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^? 
unbind ^H
bind ^H previous-window
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window


# ----------
# vim like setting
# ----------

# コピーモード突入
bind Escape copy-mode

# ペースト
bind p paste-buffer
# vでマーク開始
# 2.4 以前
# bind -t vi-copy v begin-selection
bind -T copy-mode-vi v send -X begin-selection
# yでヤンク
# 2.4 以前
# bind -t vi-copy y copy-selection
bind -T copy-mode-vi y send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# split windows like vim
# vim's definition of a horizontal/vertical split is reversed from tmux's
bind s split-window -v
bind v split-window -h

# move around panes with hjkl, as one would in vim after pressing ctrl-w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind < resize-pane -L 1
bind > resize-pane -R 1
bind - resize-pane -D 1
bind + resize-pane -U 1

# bind : to command-prompt like vim
# this is the default in tmux already
bind : command-prompt

# vi-style controls for copy mode
setw -g mode-keys vi


# ステータスラインカスタム関連(プラグイン未使用)
#
# FYI
# Status Line · zolrath/wemux Wiki : https://github.com/zolrath/wemux/wiki/Status-Line
# used-mem : https://github.com/yonchu/used-mem
#
# カラーを確認するコマンド
#
# for i in {255..0} ; do
#     printf "\x1b[38;5;${i}mcolour${i} "
# done

set -g status-style dim
set -g status-left-length 32
set -g status-right-length 150
set -g status-justify left

set -g status-fg white
set -g status-bg colour234
set -g pane-border-style fg=colour245,bg=green
set -g pane-active-border-style fg=colour39

set -g status-left '#[fg=colour223,bg=colour202,bold] #(hostname -s)#[deafult] #S #[fg=colour202,bg=colour190,nobold]#[fg=colour22,bg=colour190,bold] #(whoami) #[fg=colour190,bg=colour234,nobold]'

# ウィンドウリストを設定する
set -g window-status-format "#[fg=white,bg=colour234] #I #W "
set -g window-status-current-format "#[fg=colour234,bg=colour39]#[fg=colour25,bg=colour39,noreverse,bold] #I > #W #[fg=colour39,bg=colour234,bold]"
# 右部:[2011/03/06(Sun)20:21]
# ⓛ
set -g status-right '#[fg=colour241] #I:#P #[fg=colour213,bg=colour234,nobold]#[fg=colour53,bg=colour213] Ⓜ  #(~/.tmux/used-mem/used-mem)%% #[fg=colour112,bg=colour213]#[fg=colour22,bg=colour112] LAve.[#(~/.tmux/loadaverage)] #[fg=colour255,bg=colour112]#[fg=colour31,bg=colour255,bold] %Y/%m/%d(%a)%H:%M#[default]'
set -g message-style fg=white,bg=colour199,bold

